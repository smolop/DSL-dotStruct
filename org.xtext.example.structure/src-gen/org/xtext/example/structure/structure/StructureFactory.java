/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.structure.structure;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.structure.structure.StructurePackage
 * @generated
 */
public interface StructureFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  StructureFactory eINSTANCE = org.xtext.example.structure.structure.impl.StructureFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Raiz</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Raiz</em>'.
   * @generated
   */
  Raiz createRaiz();

  /**
   * Returns a new object of class '<em>Carpeta</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Carpeta</em>'.
   * @generated
   */
  Carpeta createCarpeta();

  /**
   * Returns a new object of class '<em>Content</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Content</em>'.
   * @generated
   */
  Content createContent();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  StructurePackage getStructurePackage();

} //StructureFactory
