/*
 * generated by Xtext 2.12.0
 */
grammar InternalStructure;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.structure.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.structure.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.structure.services.StructureGrammarAccess;

}

@parser::members {

 	private StructureGrammarAccess grammarAccess;

    public InternalStructureParser(TokenStream input, StructureGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Raiz";
   	}

   	@Override
   	protected StructureGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRaiz
entryRuleRaiz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRaizRule()); }
	iv_ruleRaiz=ruleRaiz
	{ $current=$iv_ruleRaiz.current; }
	EOF;

// Rule Raiz
ruleRaiz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Raiz'
		{
			newLeafNode(otherlv_0, grammarAccess.getRaizAccess().getRaizKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRaizAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRaizRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRaizAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRaizAccess().getCarpetasCarpetaParserRuleCall_3_0());
				}
				lv_carpetas_3_0=ruleCarpeta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaizRule());
					}
					add(
						$current,
						"carpetas",
						lv_carpetas_3_0,
						"org.xtext.example.structure.Structure.Carpeta");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRaizAccess().getContentsContentParserRuleCall_4_0());
				}
				lv_contents_4_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRaizRule());
					}
					add(
						$current,
						"contents",
						lv_contents_4_0,
						"org.xtext.example.structure.Structure.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleCarpeta
entryRuleCarpeta returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCarpetaRule()); }
	iv_ruleCarpeta=ruleCarpeta
	{ $current=$iv_ruleCarpeta.current; }
	EOF;

// Rule Carpeta
ruleCarpeta returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCarpetaAccess().getCarpetaAction_0(),
					$current);
			}
		)
		(
			(
				lv_path_1_0=RULE_STRING
				{
					newLeafNode(lv_path_1_0, grammarAccess.getCarpetaAccess().getPathSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCarpetaRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCarpetaAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCarpetaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='/'
		{
			newLeafNode(otherlv_3, grammarAccess.getCarpetaAccess().getSolidusKeyword_3());
		}
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getCarpetaAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCarpetaAccess().getChildsCarpetaParserRuleCall_4_1_0());
					}
					lv_childs_5_0=ruleCarpeta
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCarpetaRule());
						}
						add(
							$current,
							"childs",
							lv_childs_5_0,
							"org.xtext.example.structure.Structure.Carpeta");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getCarpetaAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getCarpetaAccess().getCommaKeyword_5());
			}
		)?
		(
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getCarpetaAccess().getLeftParenthesisKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCarpetaRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getCarpetaAccess().getFilesContentCrossReference_6_1_0());
					}
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getCarpetaAccess().getRightParenthesisKeyword_6_2());
			}
		)?
		(
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getCarpetaAccess().getSemicolonKeyword_7());
			}
		)?
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Contenido:'
		{
			newLeafNode(otherlv_0, grammarAccess.getContentAccess().getContenidoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContentAccess().getExtExtensionParserRuleCall_2_0());
				}
				lv_ext_2_0=ruleExtension
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentRule());
					}
					set(
						$current,
						"ext",
						lv_ext_2_0,
						"org.xtext.example.structure.Structure.Extension");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='text:'
		{
			newLeafNode(otherlv_3, grammarAccess.getContentAccess().getTextKeyword_3());
		}
		(
			(
				lv_text_4_0=RULE_STRING
				{
					newLeafNode(lv_text_4_0, grammarAccess.getContentAccess().getTextSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContentRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='_END'
		{
			newLeafNode(otherlv_5, grammarAccess.getContentAccess().get_ENDKeyword_5());
		}
	)
;

// Entry rule entryRuleExtension
entryRuleExtension returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExtensionRule()); }
	iv_ruleExtension=ruleExtension
	{ $current=$iv_ruleExtension.current.getText(); }
	EOF;

// Rule Extension
ruleExtension returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.txt'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtensionAccess().getTxtKeyword_0());
		}
		    |
		kw='.md'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtensionAccess().getMdKeyword_1());
		}
		    |
		kw='.xml'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtensionAccess().getXmlKeyword_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
